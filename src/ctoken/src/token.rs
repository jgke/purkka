#[derive(Clone, Debug, PartialEq, Eq)]
pub enum SizeofExpression {
    Static(usize),
    Dynamic(String),
}

#[allow(dead_code)]
#[derive(Clone, Debug, PartialEq, Eq)]
pub enum Token {
    // Operator
    Dot(usize),
    Arrow(usize),
    Increment(usize),
    Decrement(usize),
    BitAnd(usize),
    Times(usize),
    Plus(usize),
    Minus(usize),
    BitNot(usize),
    Not(usize),
    Divide(usize),
    Mod(usize),
    BitShiftLeft(usize),
    BitShiftRight(usize),
    LessThan(usize),
    MoreThan(usize),
    LessEqThan(usize),
    MoreEqThan(usize),
    Equals(usize),
    NotEquals(usize),
    BitXor(usize),
    BitOr(usize),
    And(usize),
    Or(usize),
    Ternary(usize),
    Assign(usize),
    TimesAssign(usize),
    DivAssign(usize),
    ModAssign(usize),
    PlusAssign(usize),
    MinusAssign(usize),
    BitShiftLeftAssign(usize),
    BitShiftRightAssign(usize),
    BitAndAssign(usize),
    BitXorAssign(usize),
    BitOrAssign(usize),
    Comma(usize),
    Macro(usize),
    MacroPaste(usize),

    // Keyword
    Auto(usize),
    Break(usize),
    Case(usize),
    Char(usize),
    Const(usize),
    Continue(usize),
    Default(usize),
    Do(usize),
    Double(usize),
    Else(usize),
    Enum(usize),
    Extern(usize),
    Float(usize),
    For(usize),
    Goto(usize),
    If(usize),
    Int(usize),
    Long(usize),
    Register(usize),
    Return(usize),
    Short(usize),
    Signed(usize),
    Static(usize),
    Inline(usize),
    Struct(usize),
    Switch(usize),
    Typedef(usize),
    Union(usize),
    Unsigned(usize),
    Void(usize),
    Volatile(usize),
    While(usize),

    // Punctuation
    OpenBracket(usize),
    CloseBracket(usize),
    OpenParen(usize),
    CloseParen(usize),
    OpenBrace(usize),
    CloseBrace(usize),
    Colon(usize),
    Semicolon(usize),
    Varargs(usize),

    // Special forms
    Sizeof(usize, SizeofExpression),
    Asm(usize, String),

    // Literals
    Identifier(usize, String),
    StringLiteral(usize, String),
    CharLiteral(usize, char),
    Number(usize, String),
}
